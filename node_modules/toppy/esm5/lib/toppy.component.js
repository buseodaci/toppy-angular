/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, Injector, ViewChild, ViewContainerRef } from '@angular/core';
import { Subject } from 'rxjs';
import { startWith, takeUntil, tap } from 'rxjs/operators';
import { Bus, cssClass, toCss } from './utils';
var ToppyComponent = /** @class */ (function () {
    function ToppyComponent(inj, cd, compResolver, elRef) {
        this.inj = inj;
        this.cd = cd;
        this.compResolver = compResolver;
        this.elRef = elRef;
        this.content = {
            type: "s" /* STRING */,
            data: '',
            props: {}
        };
        this.die = new Subject();
        this.pinj = Injector;
    }
    /**
     * @return {?}
     */
    ToppyComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.el = this.elRef.nativeElement;
        this.wrapperEl = this.el.querySelector('.t-wrapper');
        /** @type {?} */
        var cls = ['t-container', this.config.containerClass, this.position.getClassName()];
        if (this.config.closeOnDocClick) {
            cls = cls.concat(['no-pointers']);
        }
        this.el.setAttribute('data-tid', this.tid);
        cssClass('add', cls, "[data-tid='" + [this.tid] + "']");
        cssClass('add', [this.config.bodyClass]);
    };
    /**
     * @return {?}
     */
    ToppyComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.listenPos().subscribe();
        if (this.content.type === "c" /* COMPONENT */) {
            this.compInstance = this.setComponent(this.content.props);
            Bus.send(this.tid, 't_compins', this.compInstance);
        }
    };
    /**
     * @param {?} props
     * @return {?}
     */
    ToppyComponent.prototype.setComponent = /**
     * @param {?} props
     * @return {?}
     */
    function (props) {
        /** @type {?} */
        var compRef = this.compOutlet.createComponent(this.compResolver.resolveComponentFactory((/** @type {?} */ (this.content.data))));
        Object.assign(compRef.instance, props);
        compRef.changeDetectorRef.detectChanges();
        return compRef.instance;
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ToppyComponent.prototype.updateTextContent = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (this.content.type === "s" /* STRING */) {
            this.content.data = data;
            this.cd.detectChanges();
        }
    };
    /**
     * @return {?}
     */
    ToppyComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        cssClass('remove', [this.config.bodyClass]);
        this.die.next(1);
        Bus.send(this.tid, 't_detach');
    };
    /**
     * @private
     * @return {?}
     */
    ToppyComponent.prototype.listenPos = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        return Bus.listen(this.tid, 't_dynpos').pipe(startWith(1), takeUntil(this.die), tap(function (e) {
            if (!e || !e.x)
                return _this.setPos();
            /** @type {?} */
            var coords = { left: e.x, top: e.y };
            _this.wrapperEl.style = toCss(coords);
        }));
    };
    /**
     * @private
     * @return {?}
     */
    ToppyComponent.prototype.setPos = /**
     * @private
     * @return {?}
     */
    function () {
        var _a = this.position.getPositions(this.wrapperEl), extra = _a.extra, coords = tslib_1.__rest(_a, ["extra"]);
        if (this.extra !== extra) {
            this.extra = extra;
            this.cd.detectChanges();
        }
        Object.assign(coords, { visibility: 'visible', opacity: '1' });
        this.wrapperEl.style = toCss(coords);
        Bus.send(this.tid, 't_posupdate');
    };
    ToppyComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'toppy',
                    template: "<div class=\"t-backdrop\" *ngIf=\"config.backdrop\" [ngClass]=\"config.backdropClass\"></div>\n<div class=\"t-wrapper\" [ngClass]=\"config.wrapperClass\" [class]=\"extra\" #wrapperEl>\n  <ng-container [ngSwitch]=\"content.type\">\n    <ng-container *ngSwitchCase=\"'s'\">\n      <div [class]=\"content.props.class\">{{ content.data }}</div>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'h'\"> <div [innerHTML]=\"content.data\"></div> </ng-container>\n    <ng-container *ngSwitchCase=\"'t'\">\n      <ng-container *ngTemplateOutlet=\"content.data; context: { $implicit: content.props }\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'c'\"> <ng-template #compOutlet></ng-template> </ng-container>\n  </ng-container>\n</div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [":host{left:0;position:fixed;top:0;width:100%;height:100%;pointer-events:none}:host.no-pointers{pointer-events:all}:host .t-backdrop{left:0;position:fixed;top:0;width:100%;height:100%;background:rgba(0,0,0,.5)}:host>div.t-wrapper{position:absolute;visibility:hidden;opacity:0;transition:opacity .2s;overflow:hidden;pointer-events:all}"]
                }] }
    ];
    /** @nocollapse */
    ToppyComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: ChangeDetectorRef },
        { type: ComponentFactoryResolver },
        { type: ElementRef }
    ]; };
    ToppyComponent.propDecorators = {
        compOutlet: [{ type: ViewChild, args: ['compOutlet', { read: ViewContainerRef },] }]
    };
    return ToppyComponent;
}());
export { ToppyComponent };
if (false) {
    /** @type {?} */
    ToppyComponent.prototype.compOutlet;
    /** @type {?} */
    ToppyComponent.prototype.content;
    /** @type {?} */
    ToppyComponent.prototype.config;
    /** @type {?} */
    ToppyComponent.prototype.position;
    /** @type {?} */
    ToppyComponent.prototype.tid;
    /** @type {?} */
    ToppyComponent.prototype.el;
    /** @type {?} */
    ToppyComponent.prototype.wrapperEl;
    /** @type {?} */
    ToppyComponent.prototype.extra;
    /** @type {?} */
    ToppyComponent.prototype.pinj;
    /** @type {?} */
    ToppyComponent.prototype.compInstance;
    /**
     * @type {?}
     * @private
     */
    ToppyComponent.prototype.die;
    /** @type {?} */
    ToppyComponent.prototype.inj;
    /**
     * @type {?}
     * @private
     */
    ToppyComponent.prototype.cd;
    /**
     * @type {?}
     * @private
     */
    ToppyComponent.prototype.compResolver;
    /**
     * @type {?}
     * @private
     */
    ToppyComponent.prototype.elRef;
}
//# sourceMappingURL=data:application/json;base64,