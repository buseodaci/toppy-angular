/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { TemplateRef } from '@angular/core';
import { Subject } from 'rxjs';
import { filter, map } from 'rxjs/operators';
/**
 * @param {?} data
 * @param {?=} props
 * @return {?}
 */
export function getContent(data, props) {
    if (props === void 0) { props = {}; }
    /** @type {?} */
    var type = "c" /* COMPONENT */;
    if (typeof data === 'string' && props['hasHTML'])
        type = "h" /* HTML */;
    else if (typeof data === 'string')
        type = "s" /* STRING */;
    else if (data instanceof TemplateRef)
        type = "t" /* TEMPLATE */;
    return { data: data, type: type, props: props };
}
/**
 * @return {?}
 */
export function createId() {
    return Math.random()
        .toString(36)
        .substr(2, 5);
}
/* html dom utils */
/**
 * @param {?} method
 * @param {?} cls
 * @param {?=} target
 * @return {?}
 */
export function cssClass(method, cls, target) {
    if (target === void 0) { target = 'body'; }
    var _a;
    (_a = document.querySelector(target).classList)[method].apply(_a, tslib_1.__spread(cls));
}
/**
 * @param {?} styleObj
 * @return {?}
 */
export function toCss(styleObj) {
    return Object.keys(styleObj)
        .map(function (x) { return x + ":" + styleObj[x] + (typeof styleObj[x] === 'number' ? 'px' : ''); })
        .join(';');
}
/**
 * @param {?} max
 * @param {?} percentage
 * @return {?}
 */
export function percentToCss(max, percentage) {
    /** @type {?} */
    var number = Number(percentage.slice(0, -1));
    if (number > 100) {
        number = 100;
    }
    return "calc(" + max + "px - " + (100 - number) + "%)";
}
/**
 * @param {?} src
 * @param {?} host
 * @param {?} key
 * @param {?} value
 * @return {?}
 */
export function setWH(src, host, key, value) {
    if (typeof value === 'number') {
        host[key] = value = Math.abs(value);
    }
    if (typeof value === 'string' && value.endsWith('%')) {
        value = percentToCss(src[key], value);
    }
    return value;
}
/** @type {?} */
export var BodyEl = document.querySelector('body');
/* events */
var /* events */
BusClass = /** @class */ (function () {
    function BusClass() {
        this._e = new Subject();
    }
    /**
     * @param {?} from
     * @param {?} name
     * @param {?=} data
     * @return {?}
     */
    BusClass.prototype.send = /**
     * @param {?} from
     * @param {?} name
     * @param {?=} data
     * @return {?}
     */
    function (from, name, data) {
        if (data === void 0) { data = null; }
        this._e.next({ from: from, name: name, data: data });
    };
    /**
     * @param {?} from
     * @param {?} name
     * @return {?}
     */
    BusClass.prototype.listen = /**
     * @param {?} from
     * @param {?} name
     * @return {?}
     */
    function (from, name) {
        return this._e.asObservable().pipe(filter(function (e) { return e.from === from && e.name === name; }), map(function (e) { return e.data; }));
    };
    /**
     * @return {?}
     */
    BusClass.prototype.stop = /**
     * @return {?}
     */
    function () {
        this._e.complete();
    };
    return BusClass;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    BusClass.prototype._e;
}
/** @type {?} */
export var Bus = new BusClass();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b3BweS8iLCJzb3VyY2VzIjpbImxpYi91dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUMsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7Ozs7QUFHN0MsTUFBTSxVQUFVLFVBQVUsQ0FBQyxJQUFpQixFQUFFLEtBQXdCO0lBQXhCLHNCQUFBLEVBQUEsVUFBd0I7O1FBQ2hFLElBQUksc0JBQXFDO0lBRTdDLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxJQUFJLEtBQUssQ0FBQyxTQUFTLENBQUM7UUFBRSxJQUFJLGlCQUFtQixDQUFDO1NBQ3JFLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUTtRQUFFLElBQUksbUJBQXFCLENBQUM7U0FDeEQsSUFBSSxJQUFJLFlBQVksV0FBVztRQUFFLElBQUkscUJBQXVCLENBQUM7SUFFbEUsT0FBTyxFQUFFLElBQUksTUFBQSxFQUFFLElBQUksTUFBQSxFQUFFLEtBQUssT0FBQSxFQUFFLENBQUM7QUFDL0IsQ0FBQzs7OztBQUVELE1BQU0sVUFBVSxRQUFRO0lBQ3RCLE9BQU8sSUFBSSxDQUFDLE1BQU0sRUFBRTtTQUNqQixRQUFRLENBQUMsRUFBRSxDQUFDO1NBQ1osTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNsQixDQUFDOzs7Ozs7OztBQUlELE1BQU0sVUFBVSxRQUFRLENBQUMsTUFBd0IsRUFBRSxHQUFhLEVBQUUsTUFBdUI7SUFBdkIsdUJBQUEsRUFBQSxlQUF1Qjs7SUFDdkYsQ0FBQSxLQUFBLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBUyxDQUFBLENBQUMsTUFBTSxDQUFDLDRCQUFJLEdBQUcsR0FBRTtBQUMzRCxDQUFDOzs7OztBQUVELE1BQU0sVUFBVSxLQUFLLENBQUMsUUFBUTtJQUM1QixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQ3pCLEdBQUcsQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFHLENBQUMsU0FBSSxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUcsT0FBTyxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBRSxFQUFuRSxDQUFtRSxDQUFDO1NBQzdFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNmLENBQUM7Ozs7OztBQUVELE1BQU0sVUFBVSxZQUFZLENBQUMsR0FBRyxFQUFFLFVBQWtCOztRQUM5QyxNQUFNLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDNUMsSUFBSSxNQUFNLEdBQUcsR0FBRyxFQUFFO1FBQ2hCLE1BQU0sR0FBRyxHQUFHLENBQUM7S0FDZDtJQUNELE9BQU8sVUFBUSxHQUFHLGNBQVEsR0FBRyxHQUFHLE1BQU0sUUFBSSxDQUFDO0FBQzdDLENBQUM7Ozs7Ozs7O0FBRUQsTUFBTSxVQUFVLEtBQUssQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxLQUFLO0lBQ3pDLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO1FBQzdCLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNyQztJQUVELElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDcEQsS0FBSyxHQUFHLFlBQVksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDdkM7SUFFRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7O0FBRUQsTUFBTSxLQUFPLE1BQU0sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQzs7QUFJcEQ7O0lBQUE7UUFDVSxPQUFFLEdBQXdCLElBQUksT0FBTyxFQUFFLENBQUM7SUFjbEQsQ0FBQzs7Ozs7OztJQWJDLHVCQUFJOzs7Ozs7SUFBSixVQUFLLElBQVksRUFBRSxJQUFvQixFQUFFLElBQWdCO1FBQWhCLHFCQUFBLEVBQUEsV0FBZ0I7UUFDdkQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLE1BQUEsRUFBRSxJQUFJLE1BQUEsRUFBRSxJQUFJLE1BQUEsRUFBRSxDQUFDLENBQUM7SUFDckMsQ0FBQzs7Ozs7O0lBQ0QseUJBQU07Ozs7O0lBQU4sVUFBTyxJQUFZLEVBQUUsSUFBb0I7UUFDdkMsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDLElBQUksQ0FDaEMsTUFBTSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxDQUFDLElBQUksS0FBSyxJQUFJLEVBQWxDLENBQWtDLENBQUMsRUFDL0MsR0FBRyxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLElBQUksRUFBTixDQUFNLENBQUMsQ0FDakIsQ0FBQztJQUNKLENBQUM7Ozs7SUFFRCx1QkFBSTs7O0lBQUo7UUFDRSxJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFDSCxlQUFDO0FBQUQsQ0FBQyxBQWZELElBZUM7Ozs7OztJQWRDLHNCQUFnRDs7O0FBZWxELE1BQU0sS0FBTyxHQUFHLEdBQUcsSUFBSSxRQUFRLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZmlsdGVyLCBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBDb250ZW50LCBDb250ZW50RGF0YSwgQ29udGVudFByb3BzLCBDb250ZW50VHlwZSwgVG9wcHlFdmVudCwgVG9wcHlFdmVudE5hbWUgfSBmcm9tICcuL21vZGVscyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb250ZW50KGRhdGE6IENvbnRlbnREYXRhLCBwcm9wczogQ29udGVudFByb3BzID0ge30pOiBDb250ZW50IHtcbiAgbGV0IHR5cGU6IENvbnRlbnRUeXBlID0gQ29udGVudFR5cGUuQ09NUE9ORU5UO1xuXG4gIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycgJiYgcHJvcHNbJ2hhc0hUTUwnXSkgdHlwZSA9IENvbnRlbnRUeXBlLkhUTUw7XG4gIGVsc2UgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykgdHlwZSA9IENvbnRlbnRUeXBlLlNUUklORztcbiAgZWxzZSBpZiAoZGF0YSBpbnN0YW5jZW9mIFRlbXBsYXRlUmVmKSB0eXBlID0gQ29udGVudFR5cGUuVEVNUExBVEU7XG5cbiAgcmV0dXJuIHsgZGF0YSwgdHlwZSwgcHJvcHMgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUlkKCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKVxuICAgIC50b1N0cmluZygzNilcbiAgICAuc3Vic3RyKDIsIDUpO1xufVxuXG4vKiBodG1sIGRvbSB1dGlscyAqL1xuXG5leHBvcnQgZnVuY3Rpb24gY3NzQ2xhc3MobWV0aG9kOiAnYWRkJyB8ICdyZW1vdmUnLCBjbHM6IHN0cmluZ1tdLCB0YXJnZXQ6IHN0cmluZyA9ICdib2R5Jykge1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCkuY2xhc3NMaXN0W21ldGhvZF0oLi4uY2xzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRvQ3NzKHN0eWxlT2JqKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhzdHlsZU9iailcbiAgICAubWFwKHggPT4gYCR7eH06JHtzdHlsZU9ialt4XX0ke3R5cGVvZiBzdHlsZU9ialt4XSA9PT0gJ251bWJlcicgPyAncHgnIDogJyd9YClcbiAgICAuam9pbignOycpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGVyY2VudFRvQ3NzKG1heCwgcGVyY2VudGFnZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgbGV0IG51bWJlciA9IE51bWJlcihwZXJjZW50YWdlLnNsaWNlKDAsIC0xKSk7XG4gIGlmIChudW1iZXIgPiAxMDApIHtcbiAgICBudW1iZXIgPSAxMDA7XG4gIH1cbiAgcmV0dXJuIGBjYWxjKCR7bWF4fXB4IC0gJHsxMDAgLSBudW1iZXJ9JSlgO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0V0goc3JjLCBob3N0LCBrZXksIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgaG9zdFtrZXldID0gdmFsdWUgPSBNYXRoLmFicyh2YWx1ZSk7XG4gIH1cblxuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5lbmRzV2l0aCgnJScpKSB7XG4gICAgdmFsdWUgPSBwZXJjZW50VG9Dc3Moc3JjW2tleV0sIHZhbHVlKTtcbiAgfVxuXG4gIHJldHVybiB2YWx1ZTtcbn1cblxuZXhwb3J0IGNvbnN0IEJvZHlFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcblxuLyogZXZlbnRzICovXG5cbmNsYXNzIEJ1c0NsYXNzIHtcbiAgcHJpdmF0ZSBfZTogU3ViamVjdDxUb3BweUV2ZW50PiA9IG5ldyBTdWJqZWN0KCk7XG4gIHNlbmQoZnJvbTogc3RyaW5nLCBuYW1lOiBUb3BweUV2ZW50TmFtZSwgZGF0YTogYW55ID0gbnVsbCk6IHZvaWQge1xuICAgIHRoaXMuX2UubmV4dCh7IGZyb20sIG5hbWUsIGRhdGEgfSk7XG4gIH1cbiAgbGlzdGVuKGZyb206IHN0cmluZywgbmFtZTogVG9wcHlFdmVudE5hbWUpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybiB0aGlzLl9lLmFzT2JzZXJ2YWJsZSgpLnBpcGUoXG4gICAgICBmaWx0ZXIoZSA9PiBlLmZyb20gPT09IGZyb20gJiYgZS5uYW1lID09PSBuYW1lKSxcbiAgICAgIG1hcChlID0+IGUuZGF0YSlcbiAgICApO1xuICB9XG5cbiAgc3RvcCgpOiB2b2lkIHtcbiAgICB0aGlzLl9lLmNvbXBsZXRlKCk7XG4gIH1cbn1cbmV4cG9ydCBjb25zdCBCdXMgPSBuZXcgQnVzQ2xhc3MoKTtcbiJdfQ==